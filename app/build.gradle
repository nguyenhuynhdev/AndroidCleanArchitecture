plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'com.google.dagger.hilt.android'
    id 'androidx.navigation.safeargs.kotlin'
    id 'kotlin-parcelize'
    id 'kotlin-kapt'
    id 'com.google.android.libraries.mapsplatform.secrets-gradle-plugin'
}
    
android {
    namespace 'io.nguyenhuynhdev.architecture'
    compileSdk 33

    defaultConfig {
        applicationId "io.nguyenhuynhdev.architecture"
        minSdk 24
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    signingConfigs {
        // Create a variable called keystorePropertiesFile, and initialize it to your
        // keystore.properties file, in the rootProject folder.
        def keystorePropertiesFile = rootProject.file("keystore.properties")
        // Initialize a new Properties() object called keystoreProperties.
        def keystoreProperties = new Properties()
        // Load your keystore.properties file into the keystoreProperties object.
        keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
        config {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }

    flavorDimensions "api" //, "version"
    productFlavors {
        free {
            dimension "api"
            versionNameSuffix '-free'
            applicationIdSuffix ".free"

            buildConfigField "String", "DB_NAME", "\"Architecture.db\""
            buildConfigField "String", "OPENAI_URL", "\"https://api.openai.com\""
            buildConfigField "String", "BASE_URL", "\"https://raw.githubusercontent.com/nguyenhuynhdev/AndroidCleanArchitecture/master/\""
        }

        pair {
            dimension "api"
            versionNameSuffix '-pair'
            applicationIdSuffix ".pair"

            buildConfigField "String", "DB_NAME", "\"Architecture.db\""
            buildConfigField "String", "OPENAI_URL", "\"https://api.openai.com\""
            buildConfigField "String", "BASE_URL", "\"https://raw.githubusercontent.com/nguyenhuynhdev/AndroidCleanArchitecture/master/\""
        }
    }

    buildTypes {
        debug {
            //dev
            signingConfig signingConfigs.debug
            versionNameSuffix '-debug'
            applicationIdSuffix ".debug"
            debuggable true
        }

        release {
            signingConfig signingConfigs.config
            // Enables code shrinking, obfuscation, and optimization for only your project's release build type.
            minifyEnabled true
            // Enables resource shrinking, which is performed by the Android Gradle plugin.
            shrinkResources = true
            //It is used to reduce the size of the APK file and to make reverse engineering of the code more difficult.
            //This file contains more aggressive optimization rules compared to the standard ProGuard rules, which can result in even smaller APK file sizes.
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_18
        targetCompatibility JavaVersion.VERSION_18
    }
    kotlinOptions {
        jvmTarget = '18'
    }
    buildFeatures {
        buildConfig true
        dataBinding true
    }
}
kapt {
    correctErrorTypes = true
}

dependencies {
    //vi
    implementation 'androidx.core:core-ktx:1.10.1'
    implementation 'androidx.fragment:fragment-ktx:1.5.7'
    implementation "androidx.collection:collection-ktx:1.2.0"
    implementation "androidx.preference:preference-ktx:1.2.0"
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.6.1'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.6.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.6.1'

    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava3:2.9.0'
    implementation("com.squareup.okhttp3:okhttp:5.0.0-alpha.1")
    implementation("com.squareup.okhttp3:logging-interceptor:4.10.0")

    //APIs for SplashScreen
    implementation 'androidx.core:core-splashscreen:1.0.1'

    //Color ktx
    implementation("androidx.palette:palette-ktx:1.0.0")

    //Reactive Streams KTX
    implementation("androidx.lifecycle:lifecycle-reactivestreams-ktx:2.6.1")

    implementation("androidx.work:work-runtime-ktx:2.8.1")
    implementation("androidx.hilt:hilt-work:1.0.0")
    implementation("androidx.hilt:hilt-navigation-compose:1.0.0")
    // When using Kotlin.
    kapt("androidx.hilt:hilt-compiler:1.0.0")
    implementation("com.google.dagger:hilt-android:2.46.1")
    kapt("com.google.dagger:hilt-android-compiler:2.46.1")
    implementation("androidx.hilt:hilt-navigation-fragment:1.0.0")
    implementation("com.google.android.play:core-ktx:1.8.1")


    implementation 'androidx.navigation:navigation-runtime-ktx:2.5.3'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.5.3'
    implementation 'androidx.navigation:navigation-ui-ktx:2.5.3'
    // Feature module Support
    implementation("androidx.navigation:navigation-dynamic-features-fragment:2.5.3")
    // Testing Navigation
    androidTestImplementation("androidx.navigation:navigation-testing:2.5.3")
    // Jetpack Compose Integration
    implementation("androidx.navigation:navigation-compose:2.5.3")

    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.7.1'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.7.1'

    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.9.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation("androidx.room:room-ktx:2.5.1")
    implementation'androidx.room:room-runtime:2.5.1'
    kapt 'androidx.room:room-compiler:2.5.1'
    implementation("androidx.room:room-rxjava3:2.5.1")
    // optional - Guava support for Room, including Optional and ListenableFuture
    implementation("androidx.room:room-guava:2.5.1")
    // optional - Test helpers
    testImplementation("androidx.room:room-testing:2.5.1")
    // optional - Paging 3 Integration
    implementation("androidx.room:room-paging:2.5.1")
    //rxjava3
    implementation 'io.reactivex.rxjava3:rxjava:3.1.5'
    implementation 'io.reactivex.rxjava3:rxandroid:3.0.2'

    implementation 'com.google.android.gms:play-services-mlkit-barcode-scanning:18.2.0'
    implementation 'com.google.android.gms:play-services-mlkit-face-detection:17.1.0'
    implementation 'com.google.android.gms:play-services-mlkit-text-recognition:19.0.0'


    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
}
